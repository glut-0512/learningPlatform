package com.glut.learningplatform.controller;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.glut.learningplatform.entity.User;
import com.glut.learningplatform.service.UserService;
import com.glut.learningplatform.util.common.MD5Util;
import com.glut.learningplatform.util.common.RandomUtil;
import com.glut.learningplatform.util.mail.TextMessageSender;
import com.glut.learningplatform.util.tag.PageModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.io.UnsupportedEncodingException;
import java.util.Map;

@Controller
public class UserController {
    @Autowired
    private UserService userService;
    /************************后台************************/
    // 分页查询用户
    @RequestMapping("/user/{pageIndex}/getUserPageModel")
    public @ResponseBody
    PageModel<User> getUserPageModel(@PathVariable Integer pageIndex, String userName, String userIdcar, @RequestParam(value="pageSize",required=false) Integer pageSize) {
        PageModel<User> pageModel = new PageModel<>();
        pageModel.setPageIndex(pageIndex);
        if(pageSize!=null){
            pageModel.setPageSize(pageSize);
        }
        User user = new User();
        if (userName != null && !userName.equals("")) {
            user.setUsername(userName);
        }
        if (userIdcar != null && !userIdcar.equals("")) {
            user.setCardId(userIdcar);
        }
        return userService.findUser(user, pageModel);
    }

    // 根据id查询
    @RequestMapping("/findUserById")
    public @ResponseBody User findUserById(@RequestParam("id") Integer id) {
        return userService.getById(id);
    }
    /************************后台************************/
    /************************前端************************/
    //注冊
    @RequestMapping("/registerUser")
    public @ResponseBody String getUserSession(@RequestParam Map map) throws UnsupportedEncodingException {
        //System.err.println(user);
        String s = "ran/*dom.01";
        String DM5Password = MD5Util.getEncryption(map.get("loginPwd_01").toString());
        String newPassword = DM5Password + s;
        User user = new User();
        user.setLoginName(map.get("loginName").toString());
        user.setPassword(MD5Util.getEncryption(newPassword));
        user.setUsername(map.get("userName").toString());
        user.setPhoneNumber(map.get("phoneName").toString());
        user.setEmail(map.get("mailName").toString());
        userService.save(user);
        return "{\"status\":true,\"message\":\"注册成功！\"}";
    }

    long startTime = 0;//记录发送时间
    long endTime = 0;//记录校验时间
    String msg = "";//生成验证码
    //发送验证码
    @RequestMapping("/sendRandom")
    public @ResponseBody String sendRandom(@RequestParam("email") String email){
        RandomUtil rand = new RandomUtil();
        msg = rand.getRandom();
        TextMessageSender emailSend = new TextMessageSender();
        String[] args = {email,";",";","教学资源平台验证码","您收到的验证码为："+ msg +"，该验证码有效期为3分钟。"};
        startTime =  System.currentTimeMillis();
        /** 程序运行 processRun();*/
        emailSend.email(args);
        return "{\"status\":false,\"message\":\"发送成功！\"}";
    }

    @RequestMapping("/checkRandom")
    public @ResponseBody String checkRandom(@RequestParam("checkMsg") String checkMsg,
                                            @RequestParam("password") String passWord,
                                            @RequestParam("loginName") String loginName,
                                            @RequestParam("email") String email) throws UnsupportedEncodingException{
        /** 获取当前的系统时间，与初始时间相减就是程序运行的毫秒数，除以1000就是秒数*/
        endTime =  System.currentTimeMillis();
        long usedTime = (endTime-startTime)/1000;
        if (usedTime>300){
            return "{\"status\":true,\"message\":\"验证码错误或已失效！\"}";
        }
        if (msg.equals(checkMsg)){
            //查询账号
            User user = userService.getOne(new QueryWrapper<User>().eq("login_name",loginName).eq("email",email),true);
            if (user!=null){
                String s = "ran/*dom.01";
                String DM5Password = MD5Util.getEncryption(passWord);
                String newPassword = DM5Password + s;
                user.setPassword(newPassword);
                userService.saveOrUpdate(user);
                return "{\"status\":true,\"message\":\"密码重置成功！\"}";
            }else {
                return "{\"status\":false,\"message\":\"该账号不存在！\"}";
            }
        }
        return "{\"status\":false,\"message\":\"验证码输入错误！\"}";
    }
    /************************前端************************/
}
